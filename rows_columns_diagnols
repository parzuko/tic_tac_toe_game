# --------------------Global Variables-----------------

# Game board
board = ['-','-', '-',
        '-', '-', '-',
        '-', '-', '-',]

# If game still going 
game_is_still_going = True

#Who won? or tie??
winner = None 

#Who's Player One 
current_player = "X"

# Board code
def display_board ():
    print(board[0] + " | " + board[1] + " | " + board[2])
    print(board[3] + " | " + board[4] + " | " + board[5])
    print(board[6] + " | " + board[7] + " | " + board[8])


# Play a game of tic tac toe
def play_game() :
    # Displaying Initial Board
    display_board()

    # literally while the game is still going
    while game_is_still_going :

        # Handle turn of a single arbitrary player 
        handle_turn(current_player)

        # Checking if game is over 
        check_if_game_over()

        # flipping the turn
        flip_player()

# The game has ended 
if winner == "X" or winner == "O":
    print(winner + "WON!")
elif winner == None:
    print("It's a tie :(((((")
#Inputing the first "X" according to the user's wish

def handle_turn (player):
    position = input("Enter a postion from 1-9: ")
    position = int(position) - 1

    board[position] = "X"
    display_board() 


def check_if_game_over():
    check_for_winner()
    check_if_tie()

def check_for_winner(): 
    # Set up global varibles
    global winner 

    # check rows 
    row_winner = check_rows
    # check columns 
    column_winner = check_diagnols
    # check diagnols
    diagnol_winner = check_diagnols
    
    if row_winner:
        winner = row_winner
    elif column_winner:
        winner = column_winner
    elif diagnol_winner:
        winner = diagnol_winner
    else:
        winner = None
    return


def check_rows():
    # Set up global variables 
    global game_is_still_going
    #check if any row has same values
    row_1 = board[0] == board[1] == board[2] != '-'
    row_2 = board[3] == board[4] == board[5] != '-'
    row_3 = board[6] == board[7] == board[8] != '-'

    #If any row has a match
    if row_1 or row_2 or row_3:
        game_is_still_going = False
    # Return winner of X or O

    if row_1:
        return board[0]
    elif row_2:
        return board[3]
    elif row_3:
        return board[6]
    return

def check_columns():
     # Set up global variables 
    global game_is_still_going
    #check if any column has same values
    column_1 = board[0] == board[3] == board[6] != '-'
    column_2 = board[1] == board[4] == board[7] != '-'
    column_3 = board[2] == board[5] == board[8] != '-'

    #If any column has a match
    if column_1 or column_2 or column_3:
        game_is_still_going = False
    # Return winner of X or O
    
    if column_1:
        return board[0]
    elif column_2:
        return board[1]
    elif column_3:
        return board[2]
    return

def check_diagnols():
     # Set up global variables 
    global game_is_still_going
    #check if any diagnol has same values
    diagnol_1 = board[0] == board[3] == board[6] != '-'
    diagnol_2 = board[1] == board[4] == board[7] != '-'
    diagnol_3 = board[2] == board[5] == board[8] != '-'

    #If any diagnol has a match
    if diagnol_1 or diagnol_2 or diagnol_3:
        game_is_still_going = False
    # Return winner of X or O
    
    if diagnol_1:
        return board[0]
    elif diagnol_2:
        return board[1]
    elif diagnol_3:
        return board[2]
    return





def check_if_tie():
    return

def flip_player():
    return





play_game() 
